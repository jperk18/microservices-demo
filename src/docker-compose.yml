version: "3.2"
services:
  patientdomain:
    image: healthpatientdomain:dev
    build:
      context: .
      dockerfile: health-patient-domain-dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PatientDomain__BrokerCredentials__Host=rabbitmq
      - PatientDomain__PatientStorage__PatientDatabase__ConnectionString=Username=patient_service;Password=password;Server=db_host;Port=5432;Database=patient;Pooling=true;
    depends_on:
      - rabbitmq
    extra_hosts:
      - "db_host:192.168.1.17"
    networks:
      - health-broker-net
  patientapi:
    image: healthpatientapi:dev
    build:
      context: .
      dockerfile: health-patient-api-dockerfile
    ports:
      - 49501:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - PatientApi__BrokerCredentials__Host=rabbitmq
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - health-broker-net
  appointmentdomain:
    image: healthappointmentdomain:dev
    build:
      context: .
      dockerfile: health-appointment-domain-dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AppointmentDomain__BrokerCredentials__Host=rabbitmq
      - AppointmentDomain__AppointmentStorage__AppointmentDatabase__ConnectionString=Username=appointment_service;Password=password;Server=db_host;Port=5432;Database=appointment;Pooling=true;
      - AppointmentDomain__AppointmentStorage__ReferenceDataDatabase__ConnectionString=Username=appointment_service;Password=password;Server=db_host;Port=5432;Database=appointment_refdata;Pooling=true;
    depends_on:
      - rabbitmq
    extra_hosts:
      - "db_host:192.168.1.17"
    networks:
      - health-broker-net
  appointmentapi:
    image: healthappointmentapi:dev
    build:
      context: .
      dockerfile: health-appointment-api-dockerfile
    ports:
      - 49502:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AppointmentApi__BrokerCredentials__Host=rabbitmq
    restart: on-failure
    depends_on:
      - rabbitmq
    networks:
      - health-broker-net
  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - health-broker-net
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel debug
    volumes:
      - cache:/data
volumes:
  cache:
    driver: local
networks:
  health-broker-net:
    driver: bridge